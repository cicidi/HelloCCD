package com.cicidi.generic.apple_screen.copy;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map.Entry;

public class Container<K, V> {

	private LinkedHashMap<K, V> map = new LinkedHashMap<K, V>();

	public <T, M> void add(M k, M v) {
		map.put(k, v);

	}

	public void get(K k) {
		map.get(k);
	}

	public void remove(K k) {
		map.remove(k);
	}

	public List<V> iterator() {
		List<V> list = new ArrayList<V>();
		for (Entry<K, V> entry : map.entrySet()) {
			list.add(entry.getValue());
		}
		return list;
	}

	public <K, V> Container<K, V> initContainer(Fruit fruit) {

		return (Container<K, V>) new Container<K, Fruit>();
	}

	@SuppressWarnings("unchecked")
	public static <K, V> void main(String[] args) {
		Fruit app1 = new Apple(001, "app1");
		Fruit app2 = new Apple(002, "app2");
		Fruit org1 = new Orange(101, "org1");
		Fruit org2 = new Orange(102, "org2");

		Fruit pear1 = new Pear(201, "pear1");
		Fruit pear2 = new Pear(202, "pear2");
		Fruit pear3 = new Pear(203, "pear3");
		ContainerMgt containerMgt = new ContainerMgt();
		containerMgt.add(app1);
		containerMgt.add(app2);
		containerMgt.add(org1);
		containerMgt.add(org2);
		containerMgt.add(pear1);
		containerMgt.add(pear2);
		containerMgt.add(pear3);

		List<Pear> list = containerMgt.iterator("Pear");
		for (Pear p : list) {
			System.out.println(p.getId());
		}
		containerMgt.remove(pear2);
		list = containerMgt.iterator("Pear");
		for (Pear p : list) {
			System.out.println(p.getId());
		}
		list = containerMgt.iterator("Fruit");
		for (Fruit f : list) {
			System.out.println(f.getId());
		}
	}
}
